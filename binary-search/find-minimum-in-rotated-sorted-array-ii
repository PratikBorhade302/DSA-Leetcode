// https://leetcode.com/problems/find-minimum-in-rotated-sorted-array-ii/

class Solution {
    public int findMin(int[] nums) {
        int start = 0;
        int end = nums.length - 1;
        int mid = 0;
        if(nums[start] < nums[end] || start == end) return nums[0];
        int x = find_mid(start, end, nums);
        return nums[x];
      
    }
    
     public int find_mid(int start, int end, int nums[]){
        int mid = 0;
        while(start <= end){
            mid = start + (end - start)/2;
            if(mid > start && nums[mid] < nums[mid - 1]) return mid;
            if(mid < end && nums[mid] > nums[mid + 1]) return mid + 1;
            
            if(nums[start] == nums[end] && nums[end] == nums[mid]){
                start++;
                end--;
            }
            else if(nums[mid] <= nums[end]) end = mid - 1;
            else if(nums[mid] >= nums[start]) start = mid + 1;
        }
        return mid;
    }
    
}
